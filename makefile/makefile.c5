#util
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
current_dir := $(notdir $(patsubst %/,%,$(dir $(mkfile_path))))

Target = $(WHBS_BUILD_OEM_STR)_$(WHBS_BUILD_MODEL_STR)
Target_path = project_linux/$(Target)/
WTarget_path = ../../../../console/project_window/$(Target)/

#To enable -j4 option, cd and make.
all clean distclean: $(Target_path)/Makefile
	cd $(Target_path) && time make -j4 $@
	@echo ~~~~~~~~~~~~~~~~~~~~~~~~~
	@echo "	$(Target)"
	@echo ~~~~~~~~~~~~~~~~~~~~~~~~~

$(Target_path)/Makefile: $(Target_path)/$(Target).pro
	cd $(Target_path) && qmake-qt4

qm: language/ml_korean.qm

language/ml_korean.qm: project_linux/ts/ml_korean.ts language lupdate
	lrelease-qt4 project_linux/ts/*.ts
	mv project_linux/ts/*.qm language

language:
	mkdir language

lupdate:
	lupdate-qt4 $(Dirs:%=%/*.pro) -ts project_linux/ts/*.ts -locations relative

lupdate-no-obsolete:
	lupdate-qt4 $(Dirs:%=%/*.pro) -ts project_linux/ts/*.ts -locations relative -no-obsolete

install: all
	$(CROSS_COMPILE)strip $(Target_path)/$(Target)	-o ../../../../bin/$(Target)/console_exe/conmain

lswin:
	ls -l ../../../../bin/$(Target)/cc_config

#ccconfig
ccc: $(WTarget_path)/Makefile
	cd $(WTarget_path) && make -j4

cccc: ccconfig
	cd $(WTarget_path) && eee s

#mingw32-qmake-qt4 needs distclean for it isn't perfect.
$(WTarget_path)/Makefile: $(WTarget_path)/$(Target).pro
	-make -C$(WTarget_path) distclean
	cd $(WTarget_path) && mingw32-qmake-qt4 
	
build: Bin_path = ../../../../bin
build: Qt_lib = $(Bin_path)/$(Target)/qt_lib
build: all ccc qm bld.ccconfig
	mkdir -p $(Bin_path)/$(Target)/console_exe $(Bin_path)/$(Target)/config_xml $(Bin_path)/$(Target)/lang_qm $(Bin_path)/$(Target)/cc_config
	if [ -d $(Qt_lib) ]; then echo qt_lib ok; else ln -s ../../qt/lib $(Qt_lib); fi
	$(CROSS_COMPILE)strip $(Target_path)/$(Target) -o $(Bin_path)/$(Target)/console_exe/conmain
	cp language/*.qm $(Bin_path)/$(Target)/lang_qm/ -f
	cp $(Target_path)/*.xml $(Bin_path)/$(Target)/config_xml/ -f
#version
	cd $(Bin_path)/$(Target)/config_xml/&&\
	sed -i '/general_fw_version/,/general_fw_version/ s:<string>.*</string>:<string>'${WHBS_BUILD_VERSION}'</string>:' dvrconfig_default.xml 
	
#ccconfig	
	cp $(WTarget_path)/release/config.exe bld.ccconfig -f
	cp $(Target_path)/systemlog_default.xml bld.ccconfig/systemlog.xml -f
	cp $(Target_path)/dvrconfig_default.xml bld.ccconfig/dvrconfig.xml -f
	cp $(Target_path)/dvrconfig_recordcapacity_default.xml bld.ccconfig/dvrconfig_recordcapacity.xml -f
	cp $(Target_path)/consolestate_default.xml bld.ccconfig/consolestate.xml -f
	cp language/*.qm bld.ccconfig
	zip -j $(Bin_path)/$(Target)/cc_config/config.zip bld.ccconfig/*

bld.ccconfig:
	mkdir bld.ccconfig

#
# Checking xmls
#
xmlok:Xml_files = consolestate_added consolestate_default dvrconfig_added\
	dvrconfig_default dvrconfig_recordcapacity_added\
	dvrconfig_recordcapacity_default systemlog_default
xmlok:
	xmllint --noout $(Dirs:%=%/*.xml)
	
#
# Batch build
#
Dirs := $(filter-out %.pro,$(wildcard project_linux/[nw]*_*))
Models = $(Dirs:project_linux/%=%)
WDirs = $(addprefix ../../../../console/project_window/,$(Models))

~~all: $(Dirs) $(WDirs)
	echo $(Dirs) done!

$(All_dir) $(WDirs):
	make -j4 -C $@

~~distclean:
	$(Dirs:%=pushd .&&cd %&&qmake-qt4&&make distclean&&qmake-qt4;popd&&) echo Done!
	$(WDirs:%=pushd .&&cd %&&mingw32-qmake-qt4&&make distclean&&mingw32-qmake-qt4;popd&&) echo Done!

.PHONY: all clean xmlok qm ccconfig $(Dirs) $(WDirs) ~~all ~~distclean

#
# tests
#
test:
	@echo $(Dirs)
	@echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	@echo $(Models)
	@echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	@echo $(Dirs:%=%/*.pro)
